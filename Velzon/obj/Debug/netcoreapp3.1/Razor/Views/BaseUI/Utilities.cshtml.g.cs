#pragma checksum "C:\Projects\raju\velzon\Velzon_asp_core\Velzon\Velzon\Views\BaseUI\Utilities.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0a8918428f910d5c4299a98417a7be3ca195dbc0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_BaseUI_Utilities), @"mvc.1.0.view", @"/Views/BaseUI/Utilities.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Projects\raju\velzon\Velzon_asp_core\Velzon\Velzon\Views\_ViewImports.cshtml"
using Velzon;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Projects\raju\velzon\Velzon_asp_core\Velzon\Velzon\Views\_ViewImports.cshtml"
using Velzon.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0a8918428f910d5c4299a98417a7be3ca195dbc0", @"/Views/BaseUI/Utilities.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"80afc5ce8da2f6d710778254f78ee8b5408a46c6", @"/Views/_ViewImports.cshtml")]
    public class Views_BaseUI_Utilities : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/images/users/avatar-2.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("avatar-md rounded"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("rounded"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("avatar-md rounded-top"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("rounded-top"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("avatar-md rounded-end"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("rounded-end"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("avatar-md rounded-bottom"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("rounded-bottom"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("avatar-md rounded-start"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("rounded-start"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("avatar-md rounded-circle"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("rounded-circle"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/images/small/img-2.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("avatar-md w-auto rounded-pill"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("rounded-pill"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/images/users/avatar-1.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("avatar-md rounded-0"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("rounded-0"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("avatar-md rounded-1"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("rounded-1"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("avatar-md rounded-2"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("rounded-2"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("avatar-md rounded-3"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("rounded-3"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_25 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/prismjs/prism.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_26 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/app.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Projects\raju\velzon\Velzon_asp_core\Velzon\Velzon\Views\BaseUI\Utilities.cshtml"
  
    ViewBag.Title = "Utilities";
    ViewBag.pTitle = "Utilities";
    ViewBag.pageTitle = "Base UI";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""row"">
    <div class=""col-lg-12"">
        <div class=""card"">
            <div class=""card-header"">
                <h4 class=""card-title mb-0"">Borders</h4>
            </div><!-- end card header -->

            <div class=""card-body"">

                <p class=""text-muted"">Use border utilities to add or remove an element’s borders. Choose from all borders or one at a time.</p>

                <div class=""live-preview"">
                    <div>
                        <div>
                            <h5 class=""fs-13 mb-3"">Border width</h5>
                            <div class=""d-flex align-items-start flex-wrap gap-4"">
                                <div class=""text-center"">
                                    <div class=""border border-1 border-light avatar-md bg-transparent mx-auto mb-1""></div>
                                    <p><code>.border.border-1</code></p>
                                </div>
                                <div class=""text-center"">
     ");
            WriteLiteral(@"                               <div class=""border border-2 border-light avatar-md bg-transparent mx-auto mb-1""></div>
                                    <p><code>.border.border-2</code></p>
                                </div>
                                <div class=""text-center"">
                                    <div class=""border border-3 border-light avatar-md bg-transparent mx-auto mb-1""></div>
                                    <p><code>.border.border-3</code></p>
                                </div>
                                <div class=""text-center"">
                                    <div class=""border border-4 border-light avatar-md bg-transparent mx-auto mb-1""></div>
                                    <p><code>.border.border-4</code></p>
                                </div>
                                <div class=""text-center"">
                                    <div class=""border border-5 border-light avatar-md bg-transparent mx-auto mb-1""></div>
              ");
            WriteLiteral(@"                      <p><code>.border.border-5</code></p>
                                </div>
                            </div>
                        </div>
                        <div class=""row mt-4"">
                            <div class=""col-lg-6"">
                                <div>
                                    <h5 class=""fs-13 mb-3"">Additive</h5>
                                    <div class=""row"">
                                        <div class=""col-xl-2 col-sm-4 col"">
                                            <div class=""text-center"">
                                                <div class=""border avatar-md border-success bg-light mx-auto mb-1""></div>
                                                <p><code>.border</code></p>
                                            </div>
                                        </div><!--end col-->
                                        <div class=""col-xl-2 col-sm-4 col"">
                                            <div ");
            WriteLiteral(@"class=""text-center"">
                                                <div class=""border-top avatar-md border-success bg-light mx-auto mb-1""></div>
                                                <p><code>.border-top</code></p>
                                            </div>
                                        </div><!--end col-->
                                        <div class=""col-xl-2 col-sm-4 col"">
                                            <div class=""text-center"">
                                                <div class=""border-end avatar-md border-success bg-light mx-auto mb-1""></div>
                                                <p><code>.border-end</code></p>
                                            </div>
                                        </div><!--end col-->
                                        <div class=""col-xl-2 col-sm-4 col"">
                                            <div class=""text-center"">
                                                <div class=""bo");
            WriteLiteral(@"rder-bottom avatar-md border-success bg-light mx-auto mb-1""></div>
                                                <p><code>.border-bottom</code></p>
                                            </div>
                                        </div><!--end col-->
                                        <div class=""col-xl-2 col-sm-4 col"">
                                            <div class=""text-center"">
                                                <div class=""border-start avatar-md border-success bg-light mx-auto mb-1""></div>
                                                <p><code>.border-start</code></p>
                                            </div>
                                        </div><!--end col-->
                                    </div><!--end row-->
                                </div>
                            </div>

                            <div class=""col-lg-6"">
                                <div>
                                    <h5 class=""fs-13 mb-3");
            WriteLiteral(@""">Subtractive</h5>
                                    <div class=""row"">
                                        <div class=""col-xl-2 col-sm-4 col"">
                                            <div class=""text-center"">
                                                <div class=""border-0 border-success avatar-md bg-light mx-auto mb-1""></div>
                                                <p><code>.border-0</code></p>
                                            </div>
                                        </div><!--end col-->
                                        <div class=""col-xl-2 col-sm-4 col"">
                                            <div class=""text-center"">
                                                <div class=""border border-success border-top-0 avatar-md bg-light mx-auto mb-1""></div>
                                                <p><code>.border-top-0</code></p>
                                            </div>
                                        </div><!--end col-->
  ");
            WriteLiteral(@"                                      <div class=""col-xl-2 col-sm-4 col"">
                                            <div class=""text-center"">
                                                <div class=""border border-success border-end-0 avatar-md bg-light mx-auto mb-1""></div>
                                                <p><code>.border-end-0</code></p>
                                            </div>
                                        </div><!--end col-->
                                        <div class=""col-xl-2 col-sm-4 col"">
                                            <div class=""text-center"">
                                                <div class=""border border-success border-bottom-0 avatar-md bg-light mx-auto mb-1""></div>
                                                <p><code>.border-bottom-0</code></p>
                                            </div>
                                        </div><!--end col-->
                                        <div class=""col-xl");
            WriteLiteral(@"-2 col-sm-4 col"">
                                            <div class=""text-center"">
                                                <div class=""border border-start-0 border-success avatar-md bg-light mx-auto mb-1""></div>
                                                <p><code>.border-start-0</code></p>
                                            </div>
                                        </div><!--end col-->
                                    </div><!--end row-->
                                </div>
                            </div>
                        </div>
                        <div class=""mt-4"">
                            <h5 class=""fs-13 mb-3"">Border Color</h5>
                            <div class=""d-flex align-items-start flex-wrap gap-4"">
                                <div class=""text-center"">
                                    <div class=""border border-primary avatar-md bg-light mx-auto mb-1""></div>
                                    <p><code>.border-primary</c");
            WriteLiteral(@"ode></p>
                                </div>
                                <div class=""text-center"">
                                    <div class=""border border-secondary avatar-md bg-light mx-auto mb-1""></div>
                                    <p><code>.border-secondary</code></p>
                                </div>
                                <div class=""text-center"">
                                    <div class=""border border-success avatar-md bg-light mx-auto mb-1""></div>
                                    <p><code>.border-success</code></p>
                                </div>
                                <div class=""text-center"">
                                    <div class=""border border-info avatar-md bg-light mx-auto mb-1""></div>
                                    <p><code>.border-info</code></p>
                                </div>
                                <div class=""text-center"">
                                    <div class=""border border-warnin");
            WriteLiteral(@"g avatar-md bg-light mx-auto mb-1""></div>
                                    <p><code>.border-warning</code></p>
                                </div>
                                <div class=""text-center"">
                                    <div class=""border border-danger avatar-md bg-light mx-auto mb-1""></div>
                                    <p><code>.border-danger</code></p>
                                </div>
                                <div class=""text-center"">
                                    <div class=""border border-dark avatar-md bg-light mx-auto mb-1""></div>
                                    <p><code>.border-dark</code></p>
                                </div>
                            </div>
                        </div>
                        <div class=""row mt-4"">
                            <div class=""col-xxl-6"">
                                <div>
                                    <h5 class=""fs-13 mb-3"">Border Style</h5>
                        ");
            WriteLiteral(@"            <div class=""d-flex align-items-start flex-wrap gap-4"">
                                        <div class=""text-center"">
                                            <div class=""border border-primary border-dotted avatar-md bg-light mx-auto mb-1""></div>
                                            <p><code>.border-dotted</code></p>
                                        </div>
                                        <div class=""text-center"">
                                            <div class=""border border-secondary border-dashed avatar-md bg-light mx-auto mb-1""></div>
                                            <p><code>.border-dashed</code></p>
                                        </div>
                                        <div class=""text-center"">
                                            <div class=""border border-success border-groove avatar-md bg-light mx-auto mb-1""></div>
                                            <p><code>.border-groove</code></p>
                  ");
            WriteLiteral(@"                      </div>
                                        <div class=""text-center"">
                                            <div class=""border border-info border-outset avatar-md bg-light mx-auto mb-1""></div>
                                            <p><code>.border-outset</code></p>
                                        </div>
                                        <div class=""text-center"">
                                            <div class=""border border-warning border-ridge avatar-md bg-light mx-auto mb-1""></div>
                                            <p><code>.border-ridge</code></p>
                                        </div>
                                        <div class=""text-center"">
                                            <div class=""border border-danger border-inset avatar-md bg-light mx-auto mb-1""></div>
                                            <p><code>.border-inset</code></p>
                                        </div>
                  ");
            WriteLiteral(@"                  </div>
                                </div>
                            </div><!--end col-->

                            <div class=""col-xxl-6"">
                                <div>
                                    <h5 class=""fs-13 mb-3"">Additive</h5>
                                    <div class=""row"">
                                        <div class=""col-sm-3 col-"">
                                            <div class=""text-center"">
                                                <div class=""border-start border-start-dashed border-success avatar-md bg-light mx-auto mb-1""></div>
                                                <p><code>.border-start-dashed</code></p>
                                            </div>
                                        </div><!--end col-->
                                        <div class=""col-sm-3 col-"">
                                            <div class=""text-center"">
                                                <div");
            WriteLiteral(@" class=""border-top border-top-dashed border-success avatar-md bg-light mx-auto mb-1""></div>
                                                <p><code>.border-top-dashed</code></p>
                                            </div>
                                        </div><!--end col-->
                                        <div class=""col-sm-3 col-"">
                                            <div class=""text-center"">
                                                <div class=""border-end border-end-dashed border-success avatar-md bg-light mx-auto mb-1""></div>
                                                <p><code>.border-end-dashed</code></p>
                                            </div>
                                        </div><!--end col-->
                                        <div class=""col-sm-3 col-"">
                                            <div class=""text-center"">
                                                <div class=""border-bottom border-bottom-dashed border-");
            WriteLiteral(@"success avatar-md bg-light mx-auto mb-1""></div>
                                                <p><code>.border-bottom-dashed</code></p>
                                            </div>
                                        </div><!--end col-->
                                    </div><!--end row-->
                                </div>
                            </div><!--end col-->
                        </div><!--end row-->
                    </div>
                </div>
            </div><!-- end card-body -->
        </div><!-- end card -->
    </div>
    <!-- end col -->
</div>
<!-- end row -->

<div class=""row"">
    <div class=""col-lg-12"">
        <div class=""card"">
            <div class=""card-header"">
                <h4 class=""card-title mb-0"">Border Radius</h4>
            </div><!-- end card header -->

            <div class=""card-body"">
                <p class=""text-muted"">Use below-mentioned class to an element to easily round its corners.</p>
             ");
            WriteLiteral(@"   <div class=""live-preview"">
                    <div>
                        <div>
                            <div class=""d-flex align-items-start flex-wrap gap-4"">
                                <div class=""text-center"">
                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "0a8918428f910d5c4299a98417a7be3ca195dbc029429", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                    <p><code>.rounded</code></p>\r\n                                </div>\r\n                                <div class=\"text-center\">\r\n                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "0a8918428f910d5c4299a98417a7be3ca195dbc030836", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                    <p><code>.rounded-top</code></p>\r\n                                </div>\r\n                                <div class=\"text-center\">\r\n                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "0a8918428f910d5c4299a98417a7be3ca195dbc032247", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                    <p><code>.rounded-end</code></p>\r\n                                </div>\r\n                                <div class=\"text-center\">\r\n                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "0a8918428f910d5c4299a98417a7be3ca195dbc033658", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                    <p><code>.rounded-bottom</code></p>\r\n                                </div>\r\n                                <div class=\"text-center\">\r\n                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "0a8918428f910d5c4299a98417a7be3ca195dbc035072", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                    <p><code>.rounded-start</code></p>\r\n                                </div>\r\n                                <div class=\"text-center\">\r\n                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "0a8918428f910d5c4299a98417a7be3ca195dbc036486", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                    <p><code>.rounded-circle</code></p>\r\n                                </div>\r\n                                <div class=\"text-center\">\r\n                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "0a8918428f910d5c4299a98417a7be3ca195dbc037902", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                    <p><code>.rounded-top</code></p>\r\n                                </div>\r\n                                <div class=\"text-center\">\r\n                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "0a8918428f910d5c4299a98417a7be3ca195dbc039313", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                    <p><code>.rounded-pill</code></p>
                                </div>
                            </div>
                        </div>
                        <div>
                            <h5 class=""fs-13 mb-3"">Sizes</h5>
                            <div class=""d-flex align-items-start flex-wrap gap-4"">
                                <div class=""text-center"">
                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "0a8918428f910d5c4299a98417a7be3ca195dbc040971", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                    <p><code>.rounded-0</code></p>\r\n                                </div>\r\n                                <div class=\"text-center\">\r\n                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "0a8918428f910d5c4299a98417a7be3ca195dbc042383", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                    <p><code>.rounded-1</code></p>\r\n                                </div>\r\n                                <div class=\"text-center\">\r\n                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "0a8918428f910d5c4299a98417a7be3ca195dbc043795", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                    <p><code>.rounded-2</code></p>\r\n                                </div>\r\n                                <div class=\"text-center\">\r\n                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "0a8918428f910d5c4299a98417a7be3ca195dbc045207", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                    <p><code>.rounded-3</code></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div><!-- end card-body -->
        </div><!-- end card -->
    </div>
    <!-- end col -->
</div>
<!-- end row -->

<div class=""row"">
    <div class=""col-lg-12"">
        <div class=""card"">
            <div class=""card-header"">
                <h4 class=""card-title mb-0"">Display Property</h4>
            </div><!-- end card header -->

            <div class=""card-body"">
                <p class=""text-muted"">Use below-mentioned class to an element to display the value of components and more with our display utilities.</p>
                <div class=""live-preview"">
                    <div>
                        <div class=""row"">
                            <div class=""col-lg-6"">
                                <div>
                                ");
            WriteLiteral(@"    <h5 class=""fs-13 mb-3"">Display classes</h5>
                                    <div class=""table-responsive"">
                                        <table class=""table table-bordered"">
                                            <thead class=""table-light"">
                                                <tr>
                                                    <th scope=""col"" style=""width: 40%;"">Display Property</th>
                                                    <th scope=""col"">Class</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td>Display : none</td>
                                                    <td><code>.d-none</code></td>
                                                </tr>
                                                <tr>
                          ");
            WriteLiteral(@"                          <td>Display : inline</td>
                                                    <td><code>.d-inline</code></td>
                                                </tr>
                                                <tr>
                                                    <td>Display : inline-block</td>
                                                    <td><code>.d-inline-block</code></td>
                                                </tr>
                                                <tr>
                                                    <td>Display : block</td>
                                                    <td><code>.d-block</code></td>
                                                </tr>
                                                <tr>
                                                    <td>Display : table</td>
                                                    <td><code>.d-table</code></td>
                                                </tr>
    ");
            WriteLiteral(@"                                            <tr>
                                                    <td>Display : table-cell</td>
                                                    <td><code>.d-table-cell</code></td>
                                                </tr>
                                                <tr>
                                                    <td>Display : table-row</td>
                                                    <td><code>.d-table-row</code></td>
                                                </tr>
                                                <tr>
                                                    <td>Display : flex</td>
                                                    <td><code>.d-flex</code></td>
                                                </tr>
                                                <tr>
                                                    <td>Display : inline-flex</td>
                                                    <td><code");
            WriteLiteral(@">.d-inline-flex</code></td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <!-- end col -->

                            <div class=""col-lg-6"">
                                <div>
                                    <h5 class=""fs-13 mb-3"">Hiding elements</h5>
                                    <div class=""table-responsive"">
                                        <table class=""table table-bordered"">
                                            <thead class=""table-light"">
                                                <tr>
                                                    <th scope=""col"">Screen Size</th>
                                                    <th scope=""col"">Class</th>
                                                </tr>
  ");
            WriteLiteral(@"                                          </thead>
                                            <tbody>
                                                <tr>
                                                    <td>Hidden on all</td>
                                                    <td><code>.d-none</code></td>
                                                </tr>
                                                <tr>
                                                    <td>Hidden only on xs</td>
                                                    <td><code>.d-none .d-sm-block</code></td>
                                                </tr>
                                                <tr>
                                                    <td>Hidden only on sm</td>
                                                    <td><code>.d-sm-none .d-md-block</code></td>
                                                </tr>
                                                <tr>
                          ");
            WriteLiteral(@"                          <td>Hidden only on md</td>
                                                    <td><code>.d-md-none .d-lg-block</code></td>
                                                </tr>
                                                <tr>
                                                    <td>Hidden only on lg</td>
                                                    <td><code>.d-lg-none .d-xl-block</code></td>
                                                </tr>
                                                <tr>
                                                    <td>Hidden only on xl</td>
                                                    <td><code>.d-xl-none</code></td>
                                                </tr>
                                                <tr>
                                                    <td>Visible on all</td>
                                                    <td><code>.d-block</code></td>
                                        ");
            WriteLiteral(@"        </tr>
                                                <tr>
                                                    <td>Visible only on xs</td>
                                                    <td><code>.d-block .d-sm-none</code></td>
                                                </tr>
                                                <tr>
                                                    <td>Visible only on sm</td>
                                                    <td><code>.d-none .d-sm-block .d-md-none</code></td>
                                                </tr>
                                                <tr>
                                                    <td>Visible only on md</td>
                                                    <td><code>.d-none .d-md-block .d-lg-none</code></td>
                                                </tr>
                                                <tr>
                                                    <td>Visible only on lg</td");
            WriteLiteral(@">
                                                    <td><code>.d-none .d-lg-block .d-xl-none</code></td>
                                                </tr>
                                                <tr>
                                                    <td>Visible only on xl</td>
                                                    <td><code>.d-none .d-xl-block</code></td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div><!-- end col -->
                        </div><!-- end row -->
                    </div>
                    <div class=""mt-4"">
                        <h5 class=""fs-13"">Display in print</h5>
                        <p class=""text-muted"">Change the display value of elements when printing with our print display utility classes.</p>

          ");
            WriteLiteral(@"              <ul class=""ps-4 mb-0"">
                            <li class=""py-1""><code>.d-print-none</code></li>
                            <li class=""py-1""><code>.d-print-inline</code></li>
                            <li class=""py-1""><code>.d-print-inline-block</code></li>
                            <li class=""py-1""><code>.d-print-block</code></li>
                            <li class=""py-1""><code>.d-print-table</code></li>
                            <li class=""py-1""><code>.d-print-table-row</code></li>
                            <li class=""py-1""><code>.d-print-table-cell</code></li>
                            <li class=""py-1""><code>.d-print-flex</code></li>
                            <li class=""py-1""><code>.d-print-inline-flex</code></li>
                        </ul>
                    </div>
                </div>
            </div><!-- end card-body -->
        </div><!-- end card -->
    </div>
    <!-- end col -->
</div>
<!-- end row -->

<div class=""row"">
    <div class=");
            WriteLiteral(@"""col-lg-12"">
        <div class=""card"">
            <div class=""card-header"">
                <h4 class=""card-title mb-0"">Custom Class</h4>
            </div><!-- end card header -->

            <div class=""card-body"">
                <p class=""text-muted"">Use the below-mentioned class to an element to custom display the value of components and more with our display utilities.</p>                                        <div class=""live-preview"">
                    <div>
                        <div class=""table-responsive"">
                            <table class=""table table-bordered mb-0"">
                                <thead class=""table-light"">
                                    <tr>
                                        <th scope=""col"" style=""width: 40%;"">Property</th>
                                        <th scope=""col"">Class</th>
                                    </tr>
                                </thead>
                                <tbody>
                       ");
            WriteLiteral(@"             <tr>
                                        <td>font-family: 'Poppins', sans-serif;</td>
                                        <td><code>.ff-base</code></td>
                                    </tr>
                                    <tr>
                                        <td>font-family: 'hkgrotesk', sans-serif;</td>
                                        <td><code>.ff-secondary</code></td>
                                    </tr>
                                    <tr>
                                        <td>font-weight: 500;</td>
                                        <td><code>.fw-medium</code></td>
                                    </tr>
                                    <tr>
                                        <td>font-weight: 600;</td>
                                        <td><code>.fw-semibold</code></td>
                                    </tr>
                                    <tr>
                                        <td>min-width: 8");
            WriteLiteral(@"0px;</td>
                                        <td><code>.w-xs</code></td>
                                    </tr>
                                    <tr>
                                        <td>min-width: 95px;</td>
                                        <td><code>.w-sm</code></td>
                                    </tr>
                                    <tr>
                                        <td>min-width: 110px;</td>
                                        <td><code>.w-md</code></td>
                                    </tr>
                                    <tr>
                                        <td>min-width: 140px;</td>
                                        <td><code>.w-lg</code></td>
                                    </tr>
                                    <tr>
                                        <td>min-width: 160px;</td>
                                        <td><code>.w-xl</code></td>
                                    </tr>
              ");
            WriteLiteral(@"                  </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div><!-- end card-body -->
        </div><!-- end card -->
    </div>
    <!-- end col -->
</div>
<!-- end row -->

<div class=""row"">
    <div class=""col-xxl-6"">
        <div class=""card"">
            <div class=""card-header align-items-center d-flex"">
                <h4 class=""card-title mb-0 flex-grow-1"">Stacks - Vertical</h4>
                <div class=""flex-shrink-0"">
                    <div class=""form-check form-switch form-switch-right form-switch-md"">
                        <label for=""stacksvertical-showcode"" class=""form-label text-muted"">Show Code</label>
                        <input class=""form-check-input code-switcher"" type=""checkbox"" id=""stacksvertical-showcode"">
                    </div>
                </div>
            </div><!-- end card header -->
            <div class=""card-body"">
                <p c");
            WriteLiteral(@"lass=""text-muted mb-3"">Use <code>vstack</code> class to create vertical layouts. Stacked items are full-width by default. Use <code>gap-</code> class with variation to add space between items.</p>
                <div class=""live-preview"">
                    <div class=""vstack gap-3"">
                        <div class=""bg-light border p-1 px-2"">First item</div>
                        <div class=""bg-light border p-1 px-2"">Second item</div>
                        <div class=""bg-light border p-1 px-2"">Third item</div>
                    </div>

                    <div class=""mt-5"">
                        <h5 class=""fs-14 mb-3"">Vertical Stacks Examples</h5>
                        <div class=""vstack gap-2 col-md-5 mx-auto"">
                            <button type=""button"" class=""btn btn-primary"">Save changes</button>
                            <button type=""button"" class=""btn btn-outline-secondary"">Cancel</button>
                        </div>
                    </div>
                </");
            WriteLiteral(@"div>

                <div class=""d-none code-view"">
<pre class=""language-markup""><code>&lt;!-- Stacks - Vertical --&gt;
&lt;div class=&quot;vstack gap-3&quot;&gt;
    &lt;div class=&quot;bg-light border p-1 px-2&quot;&gt;First item&lt;/div&gt;
    &lt;div class=&quot;bg-light border p-1 px-2&quot;&gt;Second item&lt;/div&gt;
    &lt;div class=&quot;bg-light border p-1 px-2&quot;&gt;Third item&lt;/div&gt;
&lt;/div&gt;</code>

<code>&lt;div class=&quot;vstack gap-2&quot;&gt;
    &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;Save changes&lt;/button&gt;
    &lt;button type=&quot;button&quot; class=&quot;btn btn-outline-secondary&quot;&gt;Cancel&lt;/button&gt;
&lt;/div&gt;</code></pre>
                </div>
            </div><!-- end card-body -->
        </div><!-- end card -->
    </div>
    <!-- end col -->

    <div class=""col-xxl-6"">
        <div class=""card"">
            <div class=""card-header align-items-center d-flex"">
                <h4 class=""card-title");
            WriteLiteral(@" mb-0 flex-grow-1"">Stacks - Horizontal</h4>
                <div class=""flex-shrink-0"">
                    <div class=""form-check form-switch form-switch-right form-switch-md"">
                        <label for=""stackshorizontal-showcode"" class=""form-label text-muted"">Show Code</label>
                        <input class=""form-check-input code-switcher"" type=""checkbox"" id=""stackshorizontal-showcode"">
                    </div>
                </div>
            </div><!-- end card header -->

            <div class=""card-body"">

                <p class=""text-muted mb-3"">Use <code>hstack</code> class to create horizontal layouts. Stacked items are full-width by default. Use <code>gap-</code> class with variation to add space between items.</p>

                <div class=""live-preview"">
                    <div class=""hstack gap-3"">
                        <div class=""bg-light border p-1 px-2"">First item</div>
                        <div class=""bg-light border p-1 px-2"">Second item</div>
");
            WriteLiteral(@"                        <div class=""bg-light border p-1 px-2"">Third item</div>
                    </div>
                    <div class=""mt-4"">
                        <p class=""text-muted mb-3"">Using horizontal margin utilities like <code>ms-auto</code> as spacers:</p>

                        <div class=""hstack gap-3"">
                            <div class=""bg-light border p-1 px-2"">First item</div>
                            <div class=""bg-light border p-1 px-2 ms-auto"">Second item</div>
                            <div class=""bg-light border p-1 px-2"">Third item</div>
                        </div>
                        <div class=""hstack gap-3 mt-3"">
                            <div class=""bg-light border p-1 px-2"">First item</div>
                            <div class=""vr""></div>
                            <div class=""bg-light border p-1 px-2"">Second item</div>

                            <div class=""bg-light border p-1 px-2 ms-auto"">Third item</div>
                        </div");
            WriteLiteral(@">
                    </div>

                    <div class=""mt-5"">
                        <h5 class=""fs-13 mb-3"">Horizontal Stacks Examples</h5>
                        <div class=""hstack gap-3"">
                            <input class=""form-control me-auto"" type=""text"" placeholder=""Add your item here..."">
                            <button type=""button"" class=""btn btn-primary"">Submit</button>
                            <div class=""vr""></div>
                            <button type=""button"" class=""btn btn-outline-secondary"">Reset</button>
                        </div>
                    </div>
                </div>

                <div class=""d-none code-view"">
<pre class=""language-markup"" style=""height: 275px;""><code>&lt;!-- Stacks - Horizontal --&gt;
&lt;div class=&quot;hstack gap-3&quot;&gt;
    &lt;div class=&quot;bg-light border p-1 px-2&quot;&gt;First item&lt;/div&gt;
    &lt;div class=&quot;bg-light border p-1 px-2&quot;&gt;Second item&lt;/div&gt;
    &lt;div class=&quot;b");
            WriteLiteral(@"g-light border p-1 px-2&quot;&gt;Third item&lt;/div&gt;
&lt;/div&gt;</code>

<code>&lt;div class=&quot;hstack gap-3&quot;&gt;
    &lt;div class=&quot;bg-light border p-1 px-2&quot;&gt;First item&lt;/div&gt;
    &lt;div class=&quot;bg-light border p-1 px-2 ms-auto&quot;&gt;Second item&lt;/div&gt;
    &lt;div class=&quot;bg-light border p-1 px-2&quot;&gt;Third item&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;hstack gap-3&quot;&gt;
    &lt;div class=&quot;bg-light border p-1 px-2&quot;&gt;First item&lt;/div&gt;
    &lt;div class=&quot;vr&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;bg-light border p-1 px-2&quot;&gt;Second item&lt;/div&gt;
    
    &lt;div class=&quot;bg-light border p-1 px-2 ms-auto&quot;&gt;Third item&lt;/div&gt;
&lt;/div&gt;</code>

<code>&lt;div class=&quot;hstack gap-3&quot;&gt; 
    &lt;input class=&quot;form-control me-auto&quot; type=&quot;text&quot; placeholder=&quot;Add your item here...&quot;&gt;
    &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&q");
            WriteLiteral(@"uot;&gt;Submit&lt;/button&gt;
    &lt;div class=&quot;vr&quot;&gt;&lt;/div&gt;
    &lt;button type=&quot;button&quot; class=&quot;btn btn-outline-secondary&quot;&gt;Reset&lt;/button&gt;
&lt;/div&gt;</code></pre>
                </div>
            </div><!-- end card-body -->
        </div><!-- end card -->
    </div>
    <!-- end col -->
</div>
<!-- end row -->

<div class=""row"">
    <div class=""col-xxl-6"">
        <div class=""card"">
            <div class=""card-header align-items-center d-flex"">
                <h4 class=""card-title mb-0 flex-grow-1"">Text Selection</h4>
                <div class=""flex-shrink-0"">
                    <div class=""form-check form-switch form-switch-right form-switch-md"">
                        <label for=""textselection-showcode"" class=""form-label text-muted"">Show Code</label>
                        <input class=""form-check-input code-switcher"" type=""checkbox"" id=""textselection-showcode"">
                    </div>
                </div>
            </di");
            WriteLiteral(@"v><!-- end card header -->

            <div class=""card-body"">
                <p class=""text-muted mb-3"">Use <code>user-select-all</code>, <code>user-select-auto</code>, or <code>user-select-none</code> class to the content which is selected when the user interacts with it.</p>

                <div class=""live-preview"">
                    <div>
                        <p class=""user-select-all"">This paragraph will be entirely selected when clicked by the user.</p>
                        <p class=""user-select-auto"">This paragraph has default select behavior.</p>
                        <p class=""user-select-none mb-0"">This paragraph will not be selectable when clicked by the user.</p>
                    </div>
                </div>

                <div class=""d-none code-view"">
<pre class=""language-markup""><code>&lt;!-- Text Selection --&gt;
&lt;p class=&quot;user-select-all&quot;&gt;This paragraph will be entirely selected when clicked by the user.&lt;/p&gt;</code>

<code>&lt;p class=");
            WriteLiteral(@"&quot;user-select-auto&quot;&gt;This paragraph has default select behavior.&lt;/p&gt;</code>

<code>&lt;p class=&quot;user-select-none mb-0&quot;&gt;This paragraph will not be selectable when clicked by the user.&lt;/p&gt;</code></pre>
                </div>
            </div><!-- end card-body -->
        </div><!-- end card -->
    </div>
    <div class=""col-xxl-6"">
        <div class=""card"">
            <div class=""card-header align-items-center d-flex"">
                <h4 class=""card-title mb-0 flex-grow-1"">Pointer Events</h4>
                <div class=""flex-shrink-0"">
                    <div class=""form-check form-switch form-switch-right form-switch-md"">
                        <label for=""pointnerevents-showcode"" class=""form-label text-muted"">Show Code</label>
                        <input class=""form-check-input code-switcher"" type=""checkbox"" id=""pointnerevents-showcode"">
                    </div>
                </div>
            </div><!-- end card header -->

            <d");
            WriteLiteral(@"iv class=""card-body"">

                <p class=""text-muted mb-3"">Use <code>pe-none</code> class to prevent and <code>pe-auto</code> class to add element interactions respectively.</p>

                <div class=""live-preview"">
                    <div>
                        <p><a href=""#"" class=""text-success pe-none"" tabindex=""-1"">This link</a> can not be clicked.</p>
                        <p><a href=""#"" class=""text-success pe-auto"">This link</a> can be clicked (this is default behavior).</p>
                        <p class=""pe-none mb-0""><a href=""#"" class=""text-success"" tabindex=""-1"">This link</a> can not be clicked because the <code>pointer-events</code> property is inherited from its parent. However, <a href=""#"" class=""pe-auto"">this link</a> has a <code>pe-auto</code> class and can be clicked.</p>
                    </div>
                </div>

                <div class=""d-none code-view"">
<pre class=""language-markup""><code>&lt;!-- Pointer events --&gt;
&lt;p&gt;&lt;a href=&quot;#&");
            WriteLiteral(@"quot; class=&quot;text-success pe-none&quot; tabindex=&quot;-1&quot; aria-disabled=&quot;true&quot;&gt;This link&lt;/a&gt; can not be clicked.&lt;/p&gt;</code>

<code>&lt;p&gt;&lt;a href=&quot;#&quot; class=&quot;text-success pe-auto&quot;&gt;This link&lt;/a&gt; can be clicked (this is default behavior).&lt;/p&gt;</code>

<code>&lt;p class=&quot;pe-none mb-0&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;text-success&quot; tabindex=&quot;-1&quot; aria-disabled=&quot;true&quot;&gt;This link&lt;/a&gt; can not be clicked because the &lt;code&gt;pointer-events&lt;/code&gt; property is inherited from its parent. However, &lt;a href=&quot;#&quot; class=&quot;pe-auto&quot;&gt;this link&lt;/a&gt; has a &lt;code&gt;pe-auto&lt;/code&gt; class and can be clicked.&lt;/p&gt;</code></pre>
                </div>
            </div><!-- end card-body -->
        </div><!-- end card -->
    </div>
</div>
<!-- end row -->



<div class=""row"">
    <div class=""col-lg-12"">
        <div class=""card"">
            <di");
            WriteLiteral(@"v class=""card-header align-items-center d-flex"">
                <h4 class=""card-title mb-0 flex-grow-1"">Overflow</h4>
                <div class=""flex-shrink-0"">
                    <div class=""form-check form-switch form-switch-right form-switch-md"">
                        <label for=""overflow-showcode"" class=""form-label text-muted"">Show Code</label>
                        <input class=""form-check-input code-switcher"" type=""checkbox"" id=""overflow-showcode"">
                    </div>
                </div>
            </div><!-- end card header -->

            <div class=""card-body"">

                <p class=""text-muted"">Use <code>overflow</code> property on the fly with four default values and classes.</p>
                <div class=""live-preview"">
                    <div>
                        <div class=""row"">
                            <div class=""col-xl-3 col-sm-6"">
                                <div class=""mt-4 mt-xl-0"">
                                    <h5 class=""fs-13""");
            WriteLiteral(@">Overflow Auto</h5>

                                    <div class=""d-md-flex bg-light"">
                                        <div class=""overflow-auto p-3 mb-0 bg-light"" style=""height: 100px;"">
                                            This is an example of using <code>.overflow-auto</code> on an element with set width and height dimensions. By design, this content will vertically scroll. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- end col -->

                            <div class=""col-xl-3 col-sm-6"">
                                <div class=""mt-4 mt-xl-0"">
                                    <h5 class=""fs-13"">Overflow Hidden</h5>

                                    <div class=""d-md-flex bg-light""");
            WriteLiteral(@">
                                        <div class=""overflow-hidden p-3 mb-0 bg-light"" style=""height: 100px;"">
                                            This is an example of using <code>.overflow-hidden</code> on an element with set width and height dimensions. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- end col -->
                            <div class=""col-xl-3 col-sm-6"">
                                <div class=""mt-4 mt-xl-0"">
                                    <h5 class=""fs-13"">Overflow Visible</h5>

                                    <div class=""d-md-flex bg-light"">
                                        <div class=""overflow-visible p-3 mb-0 bg-light"" style=""height: 100px;"">
                                 ");
            WriteLiteral(@"           This is an example of using <code>.overflow-visible</code> on an element with set width and height dimensions.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- end col -->
                            <div class=""col-xl-3 col-sm-6"">
                                <div class=""mt-4 mt-xl-0"">
                                    <h5 class=""fs-13"">Overflow Scroll</h5>

                                    <div class=""d-md-flex bg-light"">
                                        <div class=""overflow-scroll p-3 mb-0 bg-light"" style=""height: 100px;"">
                                            This is an example of using <code>.overflow-scroll</code> on an element with set width and height dimensions. Lorem ipsum dolor sit amet, c");
            WriteLiteral(@"onsectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- end col -->
                        </div>
                        <!-- end row -->
                    </div>

                </div>

                <div class=""d-none code-view"">
<pre class=""language-markup""><code>&lt;!-- Overflow --&gt;
&lt;div class=&quot;overflow-hidden p-3 mb-0 bg-light&quot; style=&quot;height: 100px;&quot;&gt;
    This is an example of using &lt;code&gt;.overflow-hidden&lt;/code&gt; on an element with set width and height dimensions. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
&lt;/div&gt;</code>

<code>&lt;div class=&quot;overflow-visible p-3 mb-0 bg-light&quot; style=&quot;height: 100px;&quot;&gt;");
            WriteLiteral(@"
    This is an example of using &lt;code&gt;.overflow-visible&lt;/code&gt; on an element with set width and height dimensions.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
&lt;/div&gt;</code>

<code>&lt;div class=&quot;overflow-scroll p-3 mb-0 bg-light&quot; style=&quot;height: 100px;&quot;&gt;
    This is an example of using &lt;code&gt;.overflow-scroll&lt;/code&gt; on an element with set width and height dimensions. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
&lt;/div&gt;</code></pre>
                </div>
            </div><!-- end card-body -->
        </div><!-- end card -->
    </div>
    <!-- end col -->
</div>
<!-- end row -->

<div class=""row"">
    <div class=""col-lg-12"">
        <div class=""card"">
            <div class=""card-header align-items-center d-flex"">
                <h4 class=""card-title mb-0 flex-grow-1"">Position<");
            WriteLiteral(@"/h4>
                <div class=""flex-shrink-0"">
                    <div class=""form-check form-switch form-switch-right form-switch-md"">
                        <label for=""position-showcode"" class=""form-label text-muted"">Show Code</label>
                        <input class=""form-check-input code-switcher"" type=""checkbox"" id=""position-showcode"">
                    </div>
                </div>
            </div><!-- end card header -->

            <div class=""card-body"">
                <p class=""text-muted"">Use below mentioned classes to arrange elements easily with the edge positioning utilities.The format is {property}-{position}.</p>
                <div class=""live-preview"">
                    <div>
                        <div class=""row"">
                            <div class=""col-xl-4 col-sm-6"">
                                <div>
                                    <h5 class=""fs-13"">Arrange elements</h5>

                                    <div class=""position-relative p-");
            WriteLiteral(@"5 bg-light m-3 border rounded"" style=""height: 180px;"">
                                        <div class=""position-absolute top-0 start-0 avatar-xs bg-dark rounded""></div>
                                        <div class=""position-absolute top-0 end-0 avatar-xs bg-dark rounded""></div>
                                        <div class=""position-absolute top-50 start-50 avatar-xs bg-dark rounded""></div>
                                        <div class=""position-absolute bottom-50 end-50 avatar-xs bg-dark rounded""></div>
                                        <div class=""position-absolute bottom-0 start-0 avatar-xs bg-dark rounded""></div>
                                        <div class=""position-absolute bottom-0 end-0 avatar-xs bg-dark rounded""></div>
                                    </div>
                                </div>
                            </div>
                            <!-- end col -->

                            <div class=""col-xl-4 col-sm-6"">
                  ");
            WriteLiteral(@"              <div class=""mt-4 mt-sm-0"">
                                    <h5 class=""fs-13 mb-4"">Center elements</h5>

                                    <div class=""position-relative m-3 bg-light border rounded"" style=""height: 180px;"">
                                        <div class=""position-absolute top-0 start-0 translate-middle avatar-xs bg-dark rounded""></div>
                                        <div class=""position-absolute top-0 start-50 translate-middle avatar-xs bg-dark rounded""></div>
                                        <div class=""position-absolute top-0 start-100 translate-middle avatar-xs bg-dark rounded""></div>

                                        <div class=""position-absolute top-50 start-0 translate-middle avatar-xs bg-dark rounded""></div>
                                        <div class=""position-absolute top-50 start-50 translate-middle avatar-xs bg-dark rounded""></div>
                                        <div class=""position-absolute top-50 start-100 tran");
            WriteLiteral(@"slate-middle avatar-xs bg-dark rounded""></div>

                                        <div class=""position-absolute top-100 start-0 translate-middle avatar-xs bg-dark rounded""></div>
                                        <div class=""position-absolute top-100 start-50 translate-middle avatar-xs bg-dark rounded""></div>
                                        <div class=""position-absolute top-100 start-100 translate-middle avatar-xs bg-dark rounded""></div>
                                    </div>
                                </div>
                            </div>
                            <!-- end col -->
                            <div class=""col-xl-4 col-sm-6"">
                                <div class=""mt-4 mt-sm-0"">
                                    <h5 class=""fs-13"">Center elements</h5>

                                    <div class=""position-relative m-3 bg-light border rounded"" style=""height: 180px;"">
                                        <div class=""position-absolute to");
            WriteLiteral(@"p-0 start-0 avatar-xs bg-dark rounded ""></div>
                                        <div class=""position-absolute top-0 start-50 translate-middle-x avatar-xs bg-dark rounded""></div>
                                        <div class=""position-absolute top-0 end-0 avatar-xs bg-dark rounded""></div>

                                        <div class=""position-absolute top-50 start-0 translate-middle-y avatar-xs bg-dark rounded""></div>
                                        <div class=""position-absolute top-50 start-50 translate-middle avatar-xs bg-dark rounded""></div>
                                        <div class=""position-absolute top-50 end-0 translate-middle-y avatar-xs bg-dark rounded""></div>

                                        <div class=""position-absolute bottom-0 start-0 avatar-xs bg-dark rounded""></div>
                                        <div class=""position-absolute bottom-0 start-50 translate-middle-x avatar-xs bg-dark rounded""></div>
                                      ");
            WriteLiteral(@"  <div class=""position-absolute bottom-0 end-0 avatar-xs bg-dark rounded""></div>
                                    </div>
                                </div>
                            </div>
                            <!-- end col -->
                        </div>
                        <!-- end row -->
                    </div>

                </div>

                <div class=""d-none code-view"">
<pre class=""language-markup"" style=""height: 275px;""><code>&lt;!-- Arrange elements --&gt;
&lt;div class=&quot;position-relative p-5 bg-light m-3 border rounded&quot; style=&quot;height: 180px;&quot;&gt;
    &lt;div class=&quot;position-absolute top-0 start-0 avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;position-absolute top-0 end-0 avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;position-absolute top-50 start-50 avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;position-absolute bottom-50 end-50 avatar-xs bg-dark r");
            WriteLiteral(@"ounded&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;position-absolute bottom-0 start-0 avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;position-absolute bottom-0 end-0 avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;
&lt;/div&gt;</code>

<code>&lt;!-- Center elements --&gt;
&lt;div class=&quot;position-relative m-3 bg-light border rounded&quot; style=&quot;height: 180px;&quot;&gt;
    &lt;div class=&quot;position-absolute top-0 start-0 translate-middle avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;position-absolute top-0 start-50 translate-middle avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;position-absolute top-0 start-100 translate-middle avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;

    &lt;div class=&quot;position-absolute top-50 start-0 translate-middle avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;position-absolute top-50 start-50 translate-middle avatar-xs bg-dark rounded&quot;&gt;&lt;/");
            WriteLiteral(@"div&gt;
    &lt;div class=&quot;position-absolute top-50 start-100 translate-middle avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;

    &lt;div class=&quot;position-absolute top-100 start-0 translate-middle avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;position-absolute top-100 start-50 translate-middle avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;position-absolute top-100 start-100 translate-middle avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;
&lt;/div&gt;</code>

<code>&lt;!-- Center elements --&gt;
    &lt;div class=&quot;position-relative m-3 bg-light border rounded&quot; style=&quot;height: 180px;&quot;&gt;
    &lt;div class=&quot;position-absolute top-0 start-0 avatar-xs bg-dark rounded &quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;position-absolute top-0 start-50 translate-middle-x avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;position-absolute top-0 end-0 avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;

  ");
            WriteLiteral(@"  &lt;div class=&quot;position-absolute top-50 start-0 translate-middle-y avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;position-absolute top-50 start-50 translate-middle avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;position-absolute top-50 end-0 translate-middle-y avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;

    &lt;div class=&quot;position-absolute bottom-0 start-0 avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;position-absolute bottom-0 start-50 translate-middle-x avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;position-absolute bottom-0 end-0 avatar-xs bg-dark rounded&quot;&gt;&lt;/div&gt;
&lt;/div&gt;</code></pre>
                </div>
            </div><!-- end card-body -->
        </div><!-- end card -->
    </div>
    <!-- end col -->
</div>
<!-- end row -->

<div class=""row"">
    <div class=""col-lg-12"">
        <div class=""card"">
            <div class=""card-header align-item");
            WriteLiteral(@"s-center d-flex"">
                <h4 class=""card-title mb-0 flex-grow-1"">Shadows</h4>
                <div class=""flex-shrink-0"">
                    <div class=""form-check form-switch form-switch-right form-switch-md"">
                        <label for=""shadow-showcode"" class=""form-label text-muted"">Show Code</label>
                        <input class=""form-check-input code-switcher"" type=""checkbox"" id=""shadow-showcode"">
                    </div>
                </div>
            </div><!-- end card header -->

            <div class=""card-body"">
                <p class=""text-muted"">While shadows on components are disabled by default in Bootstrap and can be enabled via <code>$enable-shadows</code>, you can also quickly add or remove a shadow with our <code>box-shadow</code> utility classes. Includes support for <code>.shadow-none</code> and three default sizes (which have associated variables to match).</p>
                <div class=""live-preview"">
                    <div class=""row gy-");
            WriteLiteral(@"3"">
                        <div class=""col-md-6"">
                            <div class=""shadow-none p-3 bg-light rounded"">No shadow</div>
                        </div>
                        <div class=""col-md-6"">
                            <div class=""shadow-sm p-3 bg-light rounded"">Small shadow</div>
                        </div>
                        <div class=""col-md-6"">
                            <div class=""shadow p-3 bg-light rounded"">Regular shadow</div>
                        </div>
                        <div class=""col-md-6"">
                            <div class=""shadow-lg p-3 bg-light rounded"">Larger shadow</div>
                        </div>
                    </div>
                    <!-- end row -->

                </div>

                <div class=""d-none code-view"">
<pre class=""language-markup""><code>&lt;!-- Shadows --&gt;
&lt;div class=&quot;shadow-none p-3 bg-light rounded&quot;&gt;No shadow&lt;/div&gt;</code>

<code>&lt;div class=&quot;shadow-sm p");
            WriteLiteral(@"-3 bg-light rounded&quot;&gt;Small shadow&lt;/div&gt;</code>

<code>&lt;div class=&quot;shadow p-3 bg-light rounded&quot;&gt;Regular shadow&lt;/div&gt;</code>

<code>&lt;div class=&quot;shadow-lg p-3 bg-light rounded&quot;&gt;Larger shadow&lt;/div&gt;</code></pre>
                </div>
            </div><!-- end card-body -->
        </div><!-- end card -->
    </div>
    <!-- end col -->
</div>
<!-- end row -->

<div class=""row"">
    <div class=""col-xxl-6"">
        <div class=""card"">
            <div class=""card-header align-items-center d-flex"">
                <h4 class=""card-title mb-0 flex-grow-1"">Width</h4>
                <div class=""flex-shrink-0"">
                    <div class=""form-check form-switch form-switch-right form-switch-md"">
                        <label for=""width-showcode"" class=""form-label text-muted"">Show Code</label>
                        <input class=""form-check-input code-switcher"" type=""checkbox"" id=""width-showcode"">
                    </div>
           ");
            WriteLiteral(@"     </div>
            </div><!-- end card header -->
            <div class=""card-body"">
                <p class=""text-muted"">Use <code>w-25</code>,<code>w-50</code>,<code>w-75</code>,<code>w-100</code> or <code>w-auto</code> class to set width <code>25%</code>, <code>50%</code>, <code>75%</code>, <code>100%</code>, or <code>auto</code> by default respectively.</p>
                <div class=""live-preview"">
                    <div>
                        <div class=""w-25 p-3 bg-light"">Width 25%</div>
                        <div class=""w-50 p-3 bg-light"">Width 50%</div>
                        <div class=""w-75 p-3 bg-light"">Width 75%</div>
                        <div class=""w-100 p-3 bg-light"">Width 100%</div>
                        <div class=""w-auto p-3 bg-light"">Width auto</div>
                    </div>
                </div>
                <div class=""d-none code-view"">
<pre class=""language-markup""><code>&lt;!-- Width --&gt;
&lt;div class=&quot;w-25 p-3 bg-light&quot;&gt;Width 25%");
            WriteLiteral(@"&lt;/div&gt;</code>

<code>&lt;div class=&quot;w-50 p-3 bg-light&quot;&gt;Width 50%&lt;/div&gt;</code>

<code>&lt;div class=&quot;w-75 p-3 bg-light&quot;&gt;Width 75%&lt;/div&gt;</code>

<code>&lt;div class=&quot;w-100 p-3 bg-light&quot;&gt;Width 100%&lt;/div&gt;</code>

<code>&lt;div class=&quot;w-auto p-3 bg-light&quot;&gt;Width auto&lt;/div&gt;</code></pre>
                </div>
            </div><!-- end card-body -->
        </div><!-- end card -->
    </div>
    <!-- end col -->

    <div class=""col-xxl-6"">
        <div class=""card"">
            <div class=""card-header align-items-center d-flex"">
                <h4 class=""card-title mb-0 flex-grow-1"">Height</h4>
                <div class=""flex-shrink-0"">
                    <div class=""form-check form-switch form-switch-right form-switch-md"">
                        <label for=""height-showcode"" class=""form-label text-muted"">Show Code</label>
                        <input class=""form-check-input code-switcher"" type=""checkbox"" id");
            WriteLiteral(@"=""height-showcode"">
                    </div>
                </div>
            </div><!-- end card header -->
            <div class=""card-body"">
                <p class=""text-muted"">Use <code>h-25</code>,<code>h-50</code>,<code>h-75</code>,<code>h-100</code> or <code>h-auto</code> class to set height <code>25%</code>, <code>50%</code>, <code>75%</code>, <code>100%</code>, or <code>auto</code> by default respectively.</p>                                        <div class=""live-preview"">
                    <div class=""row text-center"" style=""height: 255px;"">
                        <div class=""col"">
                            <div class=""h-25 p-3 bg-light"">Height25%</div>
                        </div>
                        <div class=""col"">
                            <div class=""h-50 p-3 bg-light"">Height 50%</div>
                        </div>
                        <div class=""col"">
                            <div class=""h-75 p-3 bg-light"">Height 75%</div>
                        <");
            WriteLiteral(@"/div>
                        <div class=""col"">
                            <div class=""h-100 p-3 bg-light"">Height 100%</div>
                        </div>
                        <div class=""col"">
                            <div class=""h-auto p-3 bg-light"">Height auto</div>
                        </div>
                    </div>
                </div>
                <div class=""d-none code-view"">
<pre class=""language-markup"">
<code>&lt;!-- Height --&gt;
&lt;div class=&quot;h-25 p-3 bg-light&quot;&gt;Height25%&lt;/div&gt;</code>

<code>&lt;div class=&quot;h-50 p-3 bg-light&quot;&gt;Height50%&lt;/div&gt;</code>

<code>&lt;div class=&quot;h-75 p-3 bg-light&quot;&gt;Height75%&lt;/div&gt;</code>

<code>&lt;div class=&quot;h-100 p-3 bg-light&quot;&gt;Height100%&lt;/div&gt;</code>

<code>&lt;div class=&quot;h-auto p-3 bg-light&quot;&gt;Height auto&lt;/div&gt;</code></pre>
                </div>
            </div><!-- end card-body -->
        </div><!-- end card -->
    </div>
    <!--");
            WriteLiteral(" end col -->\r\n</div>\r\n<!-- end row -->\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n    <!-- prismjs plugin -->\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0a8918428f910d5c4299a98417a7be3ca195dbc096903", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n    <!-- App js -->\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0a8918428f910d5c4299a98417a7be3ca195dbc098031", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_26);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
