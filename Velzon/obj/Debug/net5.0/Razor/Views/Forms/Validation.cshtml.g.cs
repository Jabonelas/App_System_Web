#pragma checksum "C:\Users\Vishal\Desktop\asp.net\Modern\Modern\Velzon\Views\Forms\Validation.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "807b7e07ce69ac1a204dfeb96bd8391bd15a32d4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Forms_Validation), @"mvc.1.0.view", @"/Views/Forms/Validation.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Vishal\Desktop\asp.net\Modern\Modern\Velzon\Views\_ViewImports.cshtml"
using Velzon;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Vishal\Desktop\asp.net\Modern\Modern\Velzon\Views\_ViewImports.cshtml"
using Velzon.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"807b7e07ce69ac1a204dfeb96bd8391bd15a32d4", @"/Views/Forms/Validation.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"80afc5ce8da2f6d710778254f78ee8b5408a46c6", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Forms_Validation : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("row g-3"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("row g-3 needs-validation"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("was-validated"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/prismjs/prism.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/pages/form-validation.init.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/app.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Vishal\Desktop\asp.net\Modern\Modern\Velzon\Views\Forms\Validation.cshtml"
  
    ViewBag.Title = "Forms Validation";
    ViewBag.pTitle = "Forms Validation";
    ViewBag.pageTitle = "Forms";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""row"">
                            <div class=""col-lg-12"">
                                <div class=""card"">
                                    <div class=""card-header align-items-center d-flex"">
                                        <h4 class=""card-title mb-0 flex-grow-1"">Browser defaults</h4>
                                        <div class=""flex-shrink-0"">
                                            <div class=""form-check form-switch form-switch-right form-switch-md"">
                                                <label for=""FormValidationDefault"" class=""form-label text-muted"">Show Code</label>
                                                <input class=""form-check-input code-switcher"" type=""checkbox"" id=""FormValidationDefault"">
                                            </div>
                                        </div>
                                    </div><!-- end card header -->

                                    <div class=""card-body"">
                    ");
            WriteLiteral(@"                    <p class=""text-muted"">Not interested in custom validation feedback messages or writing JavaScript to change form behaviors? All good, you can use the browser defaults. Try submitting the form below. Depending on your browser and OS, youâ€™ll see a slightly different style of feedback.While these feedback styles cannot be styled with CSS, you can still customize the feedback text through JavaScript.</p>
        
                                        <div class=""live-preview"">
                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "807b7e07ce69ac1a204dfeb96bd8391bd15a32d48857", async() => {
                WriteLiteral(@"
                                                <div class=""col-md-4"">
                                                    <label for=""validationDefault01"" class=""form-label"">First name</label>
                                                    <input type=""text"" class=""form-control"" id=""validationDefault01"" value=""Mark"" required>
                                                </div>
                                                <div class=""col-md-4"">
                                                    <label for=""validationDefault02"" class=""form-label"">Last name</label>
                                                    <input type=""text"" class=""form-control"" id=""validationDefault02"" value=""Otto"" required>
                                                </div>
                                                <div class=""col-md-4"">
                                                    <label for=""validationDefaultUsername"" class=""form-label"">Username</label>
                                     ");
                WriteLiteral("               <div class=\"input-group\">\r\n                                                        <span class=\"input-group-text\" id=\"inputGroupPrepend2\">");
                WriteLiteral(@"@</span>
                                                        <input type=""text"" class=""form-control"" id=""validationDefaultUsername"" aria-describedby=""inputGroupPrepend2""
                                                            required>
                                                    </div>
                                                </div>
                                                <div class=""col-md-6"">
                                                    <label for=""validationDefault03"" class=""form-label"">City</label>
                                                    <input type=""text"" class=""form-control"" id=""validationDefault03"" required>
                                                </div>
                                                <div class=""col-md-3"">
                                                    <label for=""validationDefault04"" class=""form-label"">State</label>
                                                    <select class=""form-select"" id=""validationDe");
                WriteLiteral("fault04\" required>\r\n                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "807b7e07ce69ac1a204dfeb96bd8391bd15a32d411569", async() => {
                    WriteLiteral("Choose...");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("disabled", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "807b7e07ce69ac1a204dfeb96bd8391bd15a32d413498", async() => {
                    WriteLiteral("...");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                    </select>
                                                </div>
                                                <div class=""col-md-3"">
                                                    <label for=""validationDefault05"" class=""form-label"">Zip</label>
                                                    <input type=""text"" class=""form-control"" id=""validationDefault05"" required>
                                                </div>
                                                <div class=""col-12"">
                                                    <div class=""form-check"">
                                                        <input class=""form-check-input"" type=""checkbox""");
                BeginWriteAttribute("value", " value=\"", 4918, "\"", 4926, 0);
                EndWriteAttribute();
                WriteLiteral(@" id=""invalidCheck2"" required>
                                                        <label class=""form-check-label"" for=""invalidCheck2"">
                                                            Agree to terms and conditions
                                                        </label>
                                                    </div>
                                                </div>
                                                <div class=""col-12"">
                                                    <button class=""btn btn-primary"" type=""submit"">Submit form</button>
                                                </div>
                                            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                        </div>


    <div class=""d-none code-view"">
<pre class=""language-markup"" style=""height: 352px"">
<code>&lt;form class=&quot;row g-3&quot;&gt;
    &lt;div class=&quot;col-md-4&quot;&gt;
        &lt;label for=&quot;validationDefault01&quot; class=&quot;form-label&quot;&gt;First name&lt;/label&gt;
        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;validationDefault01&quot; value=&quot;Mark&quot; required&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col-md-4&quot;&gt;
        &lt;label for=&quot;validationDefault02&quot; class=&quot;form-label&quot;&gt;Last name&lt;/label&gt;
        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;validationDefault02&quot; value=&quot;Otto&quot; required&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col-md-4&quot;&gt;
        &lt;label for=&quot;validationDefaultUsername&quot; class=&quot;form-label&quot;&gt;Username&lt;/label&gt;
        &lt;div class=&quot;input-group&qu");
            WriteLiteral("ot;&gt;\r\n            &lt;span class=&quot;input-group-text&quot; id=&quot;inputGroupPrepend2&quot;&gt;");
            WriteLiteral(@"@&lt;/span&gt;
            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;validationDefaultUsername&quot; aria-describedby=&quot;inputGroupPrepend2&quot;
                required&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col-md-6&quot;&gt;
        &lt;label for=&quot;validationDefault03&quot; class=&quot;form-label&quot;&gt;City&lt;/label&gt;
        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;validationDefault03&quot; required&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col-md-3&quot;&gt;
        &lt;label for=&quot;validationDefault04&quot; class=&quot;form-label&quot;&gt;State&lt;/label&gt;
        &lt;select class=&quot;form-select&quot; id=&quot;validationDefault04&quot; required&gt;
            &lt;option selected disabled value=&quot;&quot;&gt;Choose...&lt;/option&gt;
            &lt;option&gt;...&lt;/option&gt;
        &lt;/select&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col-md-3&quot;&gt;
        &lt;la");
            WriteLiteral(@"bel for=&quot;validationDefault05&quot; class=&quot;form-label&quot;&gt;Zip&lt;/label&gt;
        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;validationDefault05&quot; required&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col-12&quot;&gt;
        &lt;div class=&quot;form-check&quot;&gt;
            &lt;input class=&quot;form-check-input&quot; type=&quot;checkbox&quot; value=&quot;&quot; id=&quot;invalidCheck2&quot; required&gt;
            &lt;label class=&quot;form-check-label&quot; for=&quot;invalidCheck2&quot;&gt;
                Agree to terms and conditions
            &lt;/label&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col-12&quot;&gt;
        &lt;button class=&quot;btn btn-primary&quot; type=&quot;submit&quot;&gt;Submit form&lt;/button&gt;
    &lt;/div&gt;
&lt;/form&gt;</code></pre>
    </div>
                                        
                                    </div>
                                </div>
                 ");
            WriteLiteral(@"           </div> <!-- end col -->
                        </div>
                        <!-- end row -->

                        <div class=""row"">
                            <div class=""col-lg-12"">
                                <div class=""card"">
                                    <div class=""card-header align-items-center d-flex"">
                                        <h4 class=""card-title mb-0 flex-grow-1"">Custom Styles</h4>
                                        <div class=""flex-shrink-0"">
                                            <div class=""form-check form-switch form-switch-right form-switch-md"">
                                                <label for=""FormVaidationCustom"" class=""form-label text-muted"">Show Code</label>
                                                <input class=""form-check-input code-switcher"" type=""checkbox"" id=""FormVaidationCustom"">
                                            </div>
                                        </div>
                        ");
            WriteLiteral(@"            </div><!-- end card header -->

                                    <div class=""card-body"">
                                        <p class=""text-muted"">For custom Bootstrap form validation messages, youâ€™ll need to add the <code>novalidate</code> boolean attribute to your <code>&lt;form&gt;</code>. This disables the browser default feedback tooltips, but still provides access to the form validation APIs in JavaScript. Try to submit the form below; our JavaScript will intercept the submit button and relay feedback to you. When attempting to submit, youâ€™ll see the <code>:invalid</code> and <code>:valid</code> styles applied to your form controls.</p>
        
                                        <div class=""live-preview"">
                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "807b7e07ce69ac1a204dfeb96bd8391bd15a32d422387", async() => {
                WriteLiteral(@"
                                                <div class=""col-md-4"">
                                                    <label for=""validationCustom01"" class=""form-label"">First name</label>
                                                    <input type=""text"" class=""form-control"" id=""validationCustom01"" value=""Mark"" required>
                                                    <div class=""valid-feedback"">
                                                        Looks good!
                                                    </div>
                                                </div>
                                                <div class=""col-md-4"">
                                                    <label for=""validationCustom02"" class=""form-label"">Last name</label>
                                                    <input type=""text"" class=""form-control"" id=""validationCustom02"" value=""Otto"" required>
                                                    <div class=""valid-feedback"">
    ");
                WriteLiteral(@"                                                    Looks good!
                                                    </div>
                                                </div>
                                                <div class=""col-md-4"">
                                                    <label for=""validationCustomUsername"" class=""form-label"">Username</label>
                                                    <div class=""input-group has-validation"">
                                                        <span class=""input-group-text"" id=""inputGroupPrepend"">");
                WriteLiteral(@"@</span>
                                                        <input type=""text"" class=""form-control"" id=""validationCustomUsername"" aria-describedby=""inputGroupPrepend""
                                                            required>
                                                        <div class=""invalid-feedback"">
                                                            Please choose a username.
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=""col-md-6"">
                                                    <label for=""validationCustom03"" class=""form-label"">City</label>
                                                    <input type=""text"" class=""form-control"" id=""validationCustom03"" required>
                                                    <div class=""invalid-feedback"">
                        ");
                WriteLiteral(@"                                Please provide a valid city.
                                                    </div>
                                                </div>
                                                <div class=""col-md-3"">
                                                    <label for=""validationCustom04"" class=""form-label"">State</label>
                                                    <select class=""form-select"" id=""validationCustom04"" required>
                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "807b7e07ce69ac1a204dfeb96bd8391bd15a32d426000", async() => {
                    WriteLiteral("Choose...");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("disabled", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "807b7e07ce69ac1a204dfeb96bd8391bd15a32d427929", async() => {
                    WriteLiteral("...");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                    </select>
                                                    <div class=""invalid-feedback"">
                                                        Please select a valid state.
                                                    </div>
                                                </div>
                                                <div class=""col-md-3"">
                                                    <label for=""validationCustom05"" class=""form-label"">Zip</label>
                                                    <input type=""text"" class=""form-control"" id=""validationCustom05"" required>
                                                    <div class=""invalid-feedback"">
                                                        Please provide a valid zip.
                                                    </div>
                                                </div>
                                                <div class=""col-12"">
   ");
                WriteLiteral("                                                 <div class=\"form-check\">\r\n                                                        <input class=\"form-check-input\" type=\"checkbox\"");
                BeginWriteAttribute("value", " value=\"", 15188, "\"", 15196, 0);
                EndWriteAttribute();
                WriteLiteral(@" id=""invalidCheck"" required>
                                                        <label class=""form-check-label"" for=""invalidCheck"">
                                                            Agree to terms and conditions
                                                        </label>
                                                        <div class=""invalid-feedback"">
                                                            You must agree before submitting.
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class=""col-12"">
                                                    <button class=""btn btn-primary"" type=""submit"">Submit form</button>
                                                </div>
                                            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("novalidate", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                        </div>


<div class=""d-none code-view"">
<pre class=""language-markup"">
<code>&lt;form class=&quot;row g-3 needs-validation&quot; novalidate&gt;
    &lt;div class=&quot;col-md-4&quot;&gt;
        &lt;label for=&quot;validationCustom01&quot; class=&quot;form-label&quot;&gt;First name&lt;/label&gt;
        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;validationCustom01&quot; value=&quot;Mark&quot; required&gt;
        &lt;div class=&quot;valid-feedback&quot;&gt;
            Looks good!
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col-md-4&quot;&gt;
        &lt;label for=&quot;validationCustom02&quot; class=&quot;form-label&quot;&gt;Last name&lt;/label&gt;
        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;validationCustom02&quot; value=&quot;Otto&quot; required&gt;
        &lt;div class=&quot;valid-feedback&quot;&gt;
            Looks good!
        &lt;/div&gt;
    &lt;/div&gt;
  ");
            WriteLiteral(@"  &lt;div class=&quot;col-md-4&quot;&gt;
        &lt;label for=&quot;validationCustomUsername&quot; class=&quot;form-label&quot;&gt;Username&lt;/label&gt;
        &lt;div class=&quot;input-group has-validation&quot;&gt;
            &lt;span class=&quot;input-group-text&quot; id=&quot;inputGroupPrepend&quot;&gt;");
            WriteLiteral(@"@&lt;/span&gt;
            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;validationCustomUsername&quot; aria-describedby=&quot;inputGroupPrepend&quot;
                required&gt;
            &lt;div class=&quot;invalid-feedback&quot;&gt;
                Please choose a username.
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col-md-6&quot;&gt;
        &lt;label for=&quot;validationCustom03&quot; class=&quot;form-label&quot;&gt;City&lt;/label&gt;
        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;validationCustom03&quot; required&gt;
        &lt;div class=&quot;invalid-feedback&quot;&gt;
            Please provide a valid city.
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col-md-3&quot;&gt;
        &lt;label for=&quot;validationCustom04&quot; class=&quot;form-label&quot;&gt;State&lt;/label&gt;
        &lt;select class=&quot;form-select&quot; id=&quot;validationCustom04&quot; require");
            WriteLiteral(@"d&gt;
            &lt;option selected disabled value=&quot;&quot;&gt;Choose...&lt;/option&gt;
            &lt;option&gt;...&lt;/option&gt;
        &lt;/select&gt;
        &lt;div class=&quot;invalid-feedback&quot;&gt;
            Please select a valid state.
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col-md-3&quot;&gt;
        &lt;label for=&quot;validationCustom05&quot; class=&quot;form-label&quot;&gt;Zip&lt;/label&gt;
        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;validationCustom05&quot; required&gt;
        &lt;div class=&quot;invalid-feedback&quot;&gt;
            Please provide a valid zip.
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col-12&quot;&gt;
        &lt;div class=&quot;form-check&quot;&gt;
            &lt;input class=&quot;form-check-input&quot; type=&quot;checkbox&quot; value=&quot;&quot; id=&quot;invalidCheck&quot; required&gt;
            &lt;label class=&quot;form-check-label&quot; for=&quot;invalidCheck");
            WriteLiteral(@"&quot;&gt;
                Agree to terms and conditions
            &lt;/label&gt;
            &lt;div class=&quot;invalid-feedback&quot;&gt;
                You must agree before submitting.
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;col-12&quot;&gt;
        &lt;button class=&quot;btn btn-primary&quot; type=&quot;submit&quot;&gt;Submit form&lt;/button&gt;
    &lt;/div&gt;
&lt;/form&gt;</code></pre>
</div>
                                        
                                    </div>
                                </div>
                            </div> <!-- end col -->

                            <div class=""row"">
                                <div class=""col-lg-12"">
                                    <div class=""card"">
                                        <div class=""card-header align-items-center d-flex"">
                                            <h4 class=""card-title mb-0 flex-grow-1"">Supported Elements</h4>
             ");
            WriteLiteral(@"                               <div class=""flex-shrink-0"">
                                                <div class=""form-check form-switch form-switch-right form-switch-md"">
                                                    <label for=""FormVaidationSupported"" class=""form-label text-muted"">Show Code</label>
                                                    <input class=""form-check-input code-switcher"" type=""checkbox"" id=""FormVaidationSupported"">
                                                </div>
                                            </div>
                                        </div><!-- end card header -->

                                        <div class=""card-body"">
                                            <p class=""text-muted"">Block-level or inline-level form text can be created using <code>.form-text</code>.</p>
            
                                            <div class=""live-preview"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "807b7e07ce69ac1a204dfeb96bd8391bd15a32d438288", async() => {
                WriteLiteral(@"
                                                    <div class=""mb-3"">
                                                        <label for=""validationTextarea"" class=""form-label"">Textarea</label>
                                                        <textarea class=""form-control is-invalid"" id=""validationTextarea"" placeholder=""Required example textarea""
                                                            required></textarea>
                                                        <div class=""invalid-feedback"">
                                                            Please enter a message in the textarea.
                                                        </div>
                                                    </div>
                                                
                                                    <div class=""form-check mb-3"">
                                                        <input type=""checkbox"" class=""form-check-input"" id=""validationFormCheck1"" requ");
                WriteLiteral(@"ired>
                                                        <label class=""form-check-label"" for=""validationFormCheck1"">Check this checkbox</label>
                                                        <div class=""invalid-feedback"">Example invalid feedback text</div>
                                                    </div>
                                                
                                                    <div class=""form-check"">
                                                        <input type=""radio"" class=""form-check-input"" id=""validationFormCheck2"" name=""radio-stacked"" required>
                                                        <label class=""form-check-label"" for=""validationFormCheck2"">Toggle this radio</label>
                                                    </div>
                                                    <div class=""form-check mb-3"">
                                                        <input type=""radio"" class=""form-check-input"" id=""validationFor");
                WriteLiteral(@"mCheck3"" name=""radio-stacked"" required>
                                                        <label class=""form-check-label"" for=""validationFormCheck3"">Or toggle this other radio</label>
                                                        <div class=""invalid-feedback"">More example invalid feedback text</div>
                                                    </div>
                                                
                                                    <div class=""mb-3"">
                                                        <select class=""form-select"" required aria-label=""select example"">
                                                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "807b7e07ce69ac1a204dfeb96bd8391bd15a32d441413", async() => {
                    WriteLiteral("Open this select menu");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "807b7e07ce69ac1a204dfeb96bd8391bd15a32d442712", async() => {
                    WriteLiteral("One");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "807b7e07ce69ac1a204dfeb96bd8391bd15a32d443993", async() => {
                    WriteLiteral("Two");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "807b7e07ce69ac1a204dfeb96bd8391bd15a32d445274", async() => {
                    WriteLiteral("Three");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                        </select>
                                                        <div class=""invalid-feedback"">Example invalid select feedback</div>
                                                    </div>
                                                
                                                    <div class=""mb-3"">
                                                        <input type=""file"" class=""form-control"" aria-label=""file example"" required>
                                                        <div class=""invalid-feedback"">Example invalid form file feedback</div>
                                                    </div>
                                                
                                                    <div class=""mb-0"">
                                                        <button class=""btn btn-primary"" type=""submit"" disabled>Submit form</button>
                                                    </div>
            ");
                WriteLiteral("                                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </div>


    <div class=""d-none code-view"">
    <pre class=""language-markup"" style=""height: 352px"">
    <code>&lt;form class=&quot;was-validated&quot;&gt;
        &lt;div class=&quot;mb-3&quot;&gt;
            &lt;label for=&quot;validationTextarea&quot; class=&quot;form-label&quot;&gt;Textarea&lt;/label&gt;
            &lt;textarea class=&quot;form-control is-invalid&quot; id=&quot;validationTextarea&quot; placeholder=&quot;Required example textarea&quot;
                required&gt;&lt;/textarea&gt;
            &lt;div class=&quot;invalid-feedback&quot;&gt;
                Please enter a message in the textarea.
            &lt;/div&gt;
        &lt;/div&gt;

        &lt;div class=&quot;form-check mb-3&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; id=&quot;validationFormCheck1&quot; required&gt;
            &lt;label class=&quot;form-check-label&quot; for=&quot;validationFormCheck1&quot;&gt;Check thi");
            WriteLiteral(@"s checkbox&lt;/label&gt;
            &lt;div class=&quot;invalid-feedback&quot;&gt;Example invalid feedback text&lt;/div&gt;
        &lt;/div&gt;

        &lt;div class=&quot;form-check&quot;&gt;
            &lt;input type=&quot;radio&quot; class=&quot;form-check-input&quot; id=&quot;validationFormCheck2&quot; name=&quot;radio-stacked&quot; required&gt;
            &lt;label class=&quot;form-check-label&quot; for=&quot;validationFormCheck2&quot;&gt;Toggle this radio&lt;/label&gt;
        &lt;/div&gt;
        &lt;div class=&quot;form-check mb-3&quot;&gt;
            &lt;input type=&quot;radio&quot; class=&quot;form-check-input&quot; id=&quot;validationFormCheck3&quot; name=&quot;radio-stacked&quot; required&gt;
            &lt;label class=&quot;form-check-label&quot; for=&quot;validationFormCheck3&quot;&gt;Or toggle this other radio&lt;/label&gt;
            &lt;div class=&quot;invalid-feedback&quot;&gt;More example invalid feedback text&lt;/div&gt;
        &lt;/div&gt;

        &lt;div class=&qu");
            WriteLiteral(@"ot;mb-3&quot;&gt;
            &lt;select class=&quot;form-select&quot; required aria-label=&quot;select example&quot;&gt;
                &lt;option value=&quot;&quot;&gt;Open this select menu&lt;/option&gt;
                &lt;option value=&quot;1&quot;&gt;One&lt;/option&gt;
                &lt;option value=&quot;2&quot;&gt;Two&lt;/option&gt;
                &lt;option value=&quot;3&quot;&gt;Three&lt;/option&gt;
            &lt;/select&gt;
            &lt;div class=&quot;invalid-feedback&quot;&gt;Example invalid select feedback&lt;/div&gt;
        &lt;/div&gt;

        &lt;div class=&quot;mb-3&quot;&gt;
            &lt;input type=&quot;file&quot; class=&quot;form-control&quot; aria-label=&quot;file example&quot; required&gt;
            &lt;div class=&quot;invalid-feedback&quot;&gt;Example invalid form file feedback&lt;/div&gt;
        &lt;/div&gt;

        &lt;div class=&quot;mb-3&quot;&gt;
            &lt;button class=&quot;btn btn-primary&quot; type=&quot;submit&quot; disabled&gt;Submit fo");
            WriteLiteral(@"rm&lt;/button&gt;
        &lt;/div&gt;
    &lt;/form&gt;</code></pre>
    </div>
                                            
                                        </div>
                                    </div>
                                </div> <!-- end col -->
                            </div>
                            <!-- end row -->

                            <div class=""row"">
                                <div class=""col-lg-12"">
                                    <div class=""card"">
                                        <div class=""card-header align-items-center d-flex"">
                                            <h4 class=""card-title mb-0 flex-grow-1"">Tooltips</h4>
                                            <div class=""flex-shrink-0"">
                                                <div class=""form-check form-switch form-switch-right form-switch-md"">
                                                    <label for=""FormVaidationTooltip"" class=""form-label text-muted"">");
            WriteLiteral(@"Show Code</label>
                                                    <input class=""form-check-input code-switcher"" type=""checkbox"" id=""FormVaidationTooltip"">
                                                </div>
                                            </div>
                                        </div><!-- end card header -->

                                        <div class=""card-body"">
                                            <p class=""text-muted"">If your form layout allows it, you can swap the <code>.{valid|invalid}-feedback</code> classes for <code>.{valid|invalid}-tooltip</code> classes to display validation feedback in a styled tooltip. Be sure to have a parent with <code>position: relative</code> on it for tooltip positioning. In the example below, our column classes have this already, but your project may require an alternative setup.</p>
            
                                            <div class=""live-preview"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "807b7e07ce69ac1a204dfeb96bd8391bd15a32d453934", async() => {
                WriteLiteral(@"
                                                    <div class=""col-md-4 position-relative"">
                                                        <label for=""validationTooltip01"" class=""form-label"">First name</label>
                                                        <input type=""text"" class=""form-control"" id=""validationTooltip01"" value=""Mark"" required>
                                                        <div class=""valid-tooltip"">
                                                            Looks good!
                                                        </div>
                                                    </div>
                                                    <div class=""col-md-4 position-relative"">
                                                        <label for=""validationTooltip02"" class=""form-label"">Last name</label>
                                                        <input type=""text"" class=""form-control"" id=""validationTooltip02"" value=""Otto"" required>
       ");
                WriteLiteral(@"                                                 <div class=""valid-tooltip"">
                                                            Looks good!
                                                        </div>
                                                    </div>
                                                    <div class=""col-md-4 position-relative"">
                                                        <label for=""validationTooltipUsername"" class=""form-label"">Username</label>
                                                        <div class=""input-group has-validation"">
                                                            <span class=""input-group-text"" id=""validationTooltipUsernamePrepend"">");
                WriteLiteral(@"@</span>
                                                            <input type=""text"" class=""form-control"" id=""validationTooltipUsername""
                                                                aria-describedby=""validationTooltipUsernamePrepend"" required>
                                                            <div class=""invalid-tooltip"">
                                                                Please choose a unique and valid username.
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class=""col-md-6 position-relative"">
                                                        <label for=""validationTooltip03"" class=""form-label"">City</label>
                                                        <input type=""text"" class=""form-control"" id=""validationTooltip03"" required>
                ");
                WriteLiteral(@"                                        <div class=""invalid-tooltip"">
                                                            Please provide a valid city.
                                                        </div>
                                                    </div>
                                                    <div class=""col-md-3 position-relative"">
                                                        <label for=""validationTooltip04"" class=""form-label"">State</label>
                                                        <select class=""form-select"" id=""validationTooltip04"" required>
                                                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "807b7e07ce69ac1a204dfeb96bd8391bd15a32d457834", async() => {
                    WriteLiteral("Choose...");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("disabled", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "807b7e07ce69ac1a204dfeb96bd8391bd15a32d459767", async() => {
                    WriteLiteral("...");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                        </select>
                                                        <div class=""invalid-tooltip"">
                                                            Please select a valid state.
                                                        </div>
                                                    </div>
                                                    <div class=""col-md-3 position-relative"">
                                                        <label for=""validationTooltip05"" class=""form-label"">Zip</label>
                                                        <input type=""text"" class=""form-control"" id=""validationTooltip05"" required>
                                                        <div class=""invalid-tooltip"">
                                                            Please provide a valid zip.
                                                        </div>
                                                    </div>
       ");
                WriteLiteral(@"                                             <div class=""col-12"">
                                                        <button class=""btn btn-primary"" type=""submit"">Submit form</button>
                                                    </div>
                                                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("novalidate", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </div>
    <div class=""d-none code-view"">
    <pre class=""language-markup"">
    <code>&lt;form class=&quot;row g-3 needs-validation&quot; novalidate&gt;
        &lt;div class=&quot;col-md-4 position-relative&quot;&gt;
            &lt;label for=&quot;validationTooltip01&quot; class=&quot;form-label&quot;&gt;First name&lt;/label&gt;
            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;validationTooltip01&quot; value=&quot;Mark&quot; required&gt;
            &lt;div class=&quot;valid-tooltip&quot;&gt;
                Looks good!
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;col-md-4 position-relative&quot;&gt;
            &lt;label for=&quot;validationTooltip02&quot; class=&quot;form-label&quot;&gt;Last name&lt;/label&gt;
            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;validationTooltip02&quot; value=&quot;Otto&quot; required&gt;
            &lt;div class=&quo");
            WriteLiteral(@"t;valid-tooltip&quot;&gt;
                Looks good!
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;col-md-4 position-relative&quot;&gt;
            &lt;label for=&quot;validationTooltipUsername&quot; class=&quot;form-label&quot;&gt;Username&lt;/label&gt;
            &lt;div class=&quot;input-group has-validation&quot;&gt;
                &lt;span class=&quot;input-group-text&quot; id=&quot;validationTooltipUsernamePrepend&quot;&gt;");
            WriteLiteral(@"@&lt;/span&gt;
                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;validationTooltipUsername&quot;
                    aria-describedby=&quot;validationTooltipUsernamePrepend&quot; required&gt;
                &lt;div class=&quot;invalid-tooltip&quot;&gt;
                    Please choose a unique and valid username.
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;col-md-6 position-relative&quot;&gt;
            &lt;label for=&quot;validationTooltip03&quot; class=&quot;form-label&quot;&gt;City&lt;/label&gt;
            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;validationTooltip03&quot; required&gt;
            &lt;div class=&quot;invalid-tooltip&quot;&gt;
                Please provide a valid city.
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;col-md-3 position-relative&quot;&gt;
            &lt;label for=&quot;validationTooltip04&quot; class=&qu");
            WriteLiteral(@"ot;form-label&quot;&gt;State&lt;/label&gt;
            &lt;select class=&quot;form-select&quot; id=&quot;validationTooltip04&quot; required&gt;
                &lt;option selected disabled value=&quot;&quot;&gt;Choose...&lt;/option&gt;
                &lt;option&gt;...&lt;/option&gt;
            &lt;/select&gt;
            &lt;div class=&quot;invalid-tooltip&quot;&gt;
                Please select a valid state.
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;col-md-3 position-relative&quot;&gt;
            &lt;label for=&quot;validationTooltip05&quot; class=&quot;form-label&quot;&gt;Zip&lt;/label&gt;
            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;validationTooltip05&quot; required&gt;
            &lt;div class=&quot;invalid-tooltip&quot;&gt;
                Please provide a valid zip.
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;col-12&quot;&gt;
            &lt;button class=&quot;btn btn-primary&quot;");
            WriteLiteral(@" type=&quot;submit&quot;&gt;Submit form&lt;/button&gt;
        &lt;/div&gt;
    &lt;/form&gt;</code></pre>
    </div>
                                            
                                        </div>
                                    </div>
                                </div> <!-- end col -->
                            
                            </div>
                            <!-- end row -->

</div>

");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n    <!-- prismjs plugin -->\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "807b7e07ce69ac1a204dfeb96bd8391bd15a32d467768", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "807b7e07ce69ac1a204dfeb96bd8391bd15a32d468872", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "807b7e07ce69ac1a204dfeb96bd8391bd15a32d469980", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
